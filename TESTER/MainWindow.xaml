<Window
    x:Class="TESTER.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    Title="Tester v2.0"
    Width="600"
    Height="325"
    MinWidth="420"
    MinHeight="345"
    AllowsTransparency="True"
    ResizeMode="CanResizeWithGrip"
    WindowStyle="None">

    <Window.Resources>
        <!--  Control colors.  -->
        <Color x:Key="WindowColor">#252c3d</Color>
        <Color x:Key="ContentAreaColorLight">#283659</Color>
        <Color x:Key="ContentAreaColorDark">#283659</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#283659</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#283659</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">#252c3d</Color>
        <Color x:Key="ControlMediumColor">#252c3d</Color>
        <Color x:Key="ControlDarkColor">#0a121f</Color>

        <Color x:Key="ControlMouseOverColor">#252c3d</Color>
        <Color x:Key="ControlPressedColor">#0a121f</Color>


        <Color x:Key="GlyphColor">#FFDDDDDD</Color>
        <Color x:Key="GlyphMouseOver">#0a121f</Color>

        <!--  Border colors  -->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--  Control-specific resources.  -->
        <Color x:Key="HeaderTopColor">#252c3d</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#0a121f</Color>

        <Color x:Key="NavButtonFrameColor">#0a121f</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Offset="0" Color="{DynamicResource ControlLightColor}" />
            <GradientStop Offset="0.5" Color="{DynamicResource ControlMediumColor}" />
            <GradientStop Offset="1" Color="{DynamicResource ControlLightColor}" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Offset="0" Color="#000000FF" />
                    <GradientStop Offset="0.4" Color="#600000FF" />
                    <GradientStop Offset="0.6" Color="#600000FF" />
                    <GradientStop Offset="1" Color="#000000FF" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="Border"
                    Grid.ColumnSpan="2"
                    BorderThickness="1"
                    CornerRadius="2">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0" Color="{DynamicResource BorderLightColor}" />
                            <GradientStop Offset="1" Color="{DynamicResource BorderDarkColor}" />
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>

                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                    <GradientStop Offset="1.0" Color="{DynamicResource ControlMediumColor}" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.Background>
                </Border>
                <Border
                    Grid.Column="0"
                    Margin="1"
                    CornerRadius="2,0,0,2">
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                    </Border.Background>
                </Border>
                <Path
                    x:Name="Arrow"
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 4 4 L 8 0 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                 (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed" />
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                 (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Shape.Fill).                 (SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).                 (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderDarkColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                 (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border
                x:Name="PART_ContentHost"
                Background="{TemplateBinding Background}"
                Focusable="False" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton
                                x:Name="ToggleButton"
                                Grid.Column="2"
                                ClickMode="Press"
                                Focusable="false"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Template="{StaticResource ComboBoxToggleButton}" />
                            <ContentPresenter
                                x:Name="ContentSite"
                                Margin="3,3,23,3"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                IsHitTestVisible="False" />
                            <TextBox
                                x:Name="PART_EditableTextBox"
                                Margin="3,3,23,3"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Bottom"
                                Background="Transparent"
                                Focusable="True"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                Visibility="Hidden" />
                            <Popup
                                x:Name="Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                Placement="Bottom"
                                PopupAnimation="Slide">
                                <Grid
                                    x:Name="DropDown"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder" BorderThickness="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).                       (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border
                            x:Name="Border"
                            Padding="2"
                            Background="Transparent"
                            SnapsToDevicePixels="true">
                            <ContentPresenter />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                     (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBackgroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                     (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedUnfocusedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Styl dla przycisku ToggleButton w ComboBox  -->
        <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
            <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                <Path
                    x:Name="Arrow"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 4 4 L 8 0 Z"
                    Fill="{TemplateBinding Foreground}" />
            </Border>
        </ControlTemplate>
    </Window.Resources>
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="Background" Value="#334257" />
            <Setter Property="Foreground" Value="White" />
        </Style>
    </Window.Style>

    <DockPanel>
        <!--  Niestandardowy pasek tytułowy  -->
        <Grid x:Name="TitleBar" DockPanel.Dock="Top">
            <Grid
                x:Name="titleBar"
                Height="20"
                Background="#122036">
                <!--  Przycisk zamknięcia  -->
                <Button
                    Width="26"
                    Height="32"
                    Margin="0,-9,0,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="CloseButton_Click"
                    Content="x"
                    FontSize="20"
                    Foreground="Red" />
                <!--  Przycisk "Always on top"  -->
                <Button
                    x:Name="aot"
                    Width="25"
                    Height="22"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    BorderThickness="0"
                    Click="OnTopButton_Click"
                    FontSize="12">
                    <Image
                        Width="30"
                        Height="22"
                        HorizontalAlignment="Left"
                        Source="pack://application:,,,/TESTER;component/resources/icon.ico" />
                    <Button.ToolTip>
                        <ToolTip>Przełącz Always on top</ToolTip>
                    </Button.ToolTip>
                </Button>
                <TextBlock
                    Margin="32,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    FontSize="12"
                    Foreground="White"
                    Text="Tester" />

            </Grid>
        </Grid>
        <!--  credits panel  -->
        <Grid DockPanel.Dock="Bottom">
            <DockPanel>

                <TextBlock
                    x:Name="Credits"
                    DockPanel.Dock="Left"
                    FontSize="9"
                    Opacity="0.5"
                    TextWrapping="Wrap" />
                <Thumb
                    x:Name="customResizeGrip"
                    Width="16"
                    Height="16"
                    Margin="1,1,3,3"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    DragDelta="customResizeGrip_DragDelta">
                    <Thumb.Template>
                        <ControlTemplate TargetType="Thumb">
                            <Border Background="Transparent">
                                <Image Source="pack://application:,,,/TESTER;component/resources/corner.png" />
                            </Border>
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
            </DockPanel>
        </Grid>

        <Grid x:Name="contentGrid" DockPanel.Dock="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*" />
                <ColumnDefinition Width="6*" />
            </Grid.ColumnDefinitions>

            <!--  Lewa strona  -->
            <DockPanel Grid.Column="0" Margin="3,3,3,3">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" Orientation="Vertical">
                        <!--  Adres środowiska  -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="9*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <TextBox
                                x:Name="address"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Height="24"
                                Margin="1,1,1,1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                Background="#252c3d"
                                Foreground="White"
                                GotKeyboardFocus="TextBox_GotFocus"
                                PreviewMouseLeftButtonDown="TextBox_PreviewMouseLeftButtonDown"
                                TabIndex="2"
                                TextChanged="address_TextChanged"
                                TextWrapping="NoWrap" />

                            <Label
                                Grid.Column="0"
                                Content="Adres środowiska AMMS"
                                Foreground="Gray"
                                IsHitTestVisible="False">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=address, Path=Text.IsEmpty}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>

                            <Image
                                x:Name="ConnectionIndicator"
                                Grid.Column="1"
                                Width="20"
                                Height="24"
                                Margin="1,1,1,1"
                                HorizontalAlignment="Right" />
                        </Grid>

                        <!--  Browser comboBox  -->
                        <ComboBox
                            x:Name="browserComboBox"
                            Height="24"
                            Margin="1,1,1,1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                            <ComboBoxItem Content="Firefox" />
                            <ComboBoxItem Content="Chrome" />
                            <ComboBoxItem Content="Edge" />
                        </ComboBox>

                        <!--  dane usera  -->
                        <Grid Grid.Column="1" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4*" />
                                <ColumnDefinition Width="4*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <TextBox
                                x:Name="user"
                                Grid.Column="0"
                                Height="24"
                                Margin="1,1,1,1"
                                VerticalContentAlignment="Center"
                                Background="#252c3d"
                                Foreground="White"
                                GotKeyboardFocus="TextBox_GotFocus"
                                PreviewMouseLeftButtonDown="TextBox_PreviewMouseLeftButtonDown" />
                            <Label
                                Grid.Column="0"
                                Height="24"
                                Margin="1,1,1,1"
                                Content="Użytkownik"
                                Foreground="Gray"
                                IsHitTestVisible="False">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=user, Path=Text.IsEmpty}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                            <TextBox
                                x:Name="pwd"
                                Grid.Column="1"
                                Height="24"
                                Margin="1,1,1,1"
                                VerticalContentAlignment="Center"
                                Background="#252c3d"
                                Foreground="White"
                                GotKeyboardFocus="TextBox_GotFocus"
                                Opacity="0.85"
                                PreviewMouseLeftButtonDown="TextBox_PreviewMouseLeftButtonDown" />
                            <Label
                                Grid.Column="1"
                                Height="24"
                                Margin="1,1,1,1"
                                Content="Hasło"
                                Foreground="Gray"
                                IsHitTestVisible="False">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=pwd, Path=Text.IsEmpty}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                            <Button
                                Grid.Column="2"
                                Height="24"
                                MinWidth="24"
                                Margin="1,1,1,1"
                                Background="#252c3d"
                                Click="SaveUserButton_Click">
                                <Image
                                    Grid.Column="2"
                                    Width="20"
                                    Height="20"
                                    Source="pack://application:,,,/TESTER;component/resources/save.png"
                                    Stretch="Uniform" />
                                <Button.ToolTip>
                                    <ToolTip>Zapisz domyślnego użytkownika i przeglądarkę</ToolTip>
                                </Button.ToolTip>
                            </Button>
                        </Grid>

                    </StackPanel>
                    <StackPanel Grid.Row="1" Orientation="Vertical">
                        <!--  Dane testu  -->
                        <TextBlock TextWrapping="Wrap">
                            Dane przypadku testowego:
                        </TextBlock>
                        <!--  pesel  -->
                        <Grid>
                            <TextBox
                                x:Name="pesel"
                                Height="24"
                                Margin="1,1,1,1"
                                Background="#252c3d"
                                Foreground="White"
                                GotKeyboardFocus="TextBox_GotFocus"
                                PreviewMouseLeftButtonDown="TextBox_PreviewMouseLeftButtonDown"
                                TabIndex="4"
                                Tag="PESEL"
                                TextWrapping="Wrap" />
                            <Label
                                Height="24"
                                Margin="1,1,1,1"
                                Content="PESEL"
                                Foreground="Gray"
                                IsHitTestVisible="False">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=pesel, Path=Text.IsEmpty}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </Grid>
                        <!--  jos  -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="83*" />
                                <ColumnDefinition Width="160*" />
                            </Grid.ColumnDefinitions>
                            <TextBox
                                x:Name="jos"
                                Grid.ColumnSpan="2"
                                Height="24"
                                Margin="1,1,1,1"
                                Background="#252c3d"
                                Foreground="White"
                                GotKeyboardFocus="TextBox_GotFocus"
                                PreviewMouseLeftButtonDown="TextBox_PreviewMouseLeftButtonDown"
                                TabIndex="5"
                                Tag="JOS"
                                TextWrapping="Wrap" />
                            <Label
                                Grid.ColumnSpan="2"
                                Height="24"
                                Margin="1,1,1,1"
                                Content="JOS"
                                Foreground="Gray"
                                IsHitTestVisible="False">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=jos, Path=Text.IsEmpty}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </Grid>

                        <!--  id  -->
                        <Grid>
                            <TextBox
                                x:Name="pac"
                                Height="68"
                                Margin="1,1,1,1"
                                AcceptsReturn="True"
                                Background="#252c3d"
                                Foreground="White"
                                GotKeyboardFocus="TextBox_GotFocus"
                                PreviewMouseLeftButtonDown="TextBox_PreviewMouseLeftButtonDown"
                                TabIndex="6"
                                Text="Identyfikator pacjenta: &#x0a;Identyfikator opieki: &#x0a;Identyfikator pobytu: &#x0a;Identyfikator zlecenia: "
                                TextWrapping="Wrap" />
                        </Grid>


                    </StackPanel>
                    <!--  opis  -->
                    <DockPanel Grid.Row="2" VerticalAlignment="Stretch">
                        <Grid DockPanel.Dock="Bottom">
                            <!--  Zdefiniowanie wierszy dla TextBlocków i TextBoxów  -->
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <!--  Dla TextBlock "Opis ścieżki:"  -->
                                <RowDefinition Height="*" />
                                <!--  Dla TextBox "path"  -->
                                <RowDefinition Height="Auto" />
                                <!--  Dla TextBlock "Rezultat Testu:"  -->
                                <RowDefinition Height="*" />
                                <!--  Dla TextBox "desc"  -->
                            </Grid.RowDefinitions>

                            <!--  TextBlock "Opis ścieżki:"  -->
                            <TextBlock
                                Grid.Row="0"
                                Margin="1,1,1,1"
                                VerticalAlignment="Top"
                                Text="Opis ścieżki:"
                                TextWrapping="Wrap" />

                            <!--  TextBox "path"  -->
                            <TextBox
                                x:Name="path"
                                Grid.Row="1"
                                Margin="1,1,1,1"
                                VerticalAlignment="Stretch"
                                AcceptsReturn="True"
                                Background="#252c3d"
                                Foreground="White"
                                TextWrapping="Wrap"
                                VerticalScrollBarVisibility="Auto" />

                            <!--  TextBlock "Rezultat Testu:"  -->
                            <TextBlock
                                Grid.Row="2"
                                Margin="1,1,1,1"
                                VerticalAlignment="Top"
                                Text="Rezultat Testu: "
                                TextWrapping="Wrap" />

                            <!--  TextBox "desc"  -->
                            <TextBox
                                x:Name="desc"
                                Grid.Row="3"
                                Margin="1,1,1,1"
                                VerticalAlignment="Stretch"
                                AcceptsReturn="True"
                                Background="#252c3d"
                                Foreground="White"
                                TextWrapping="Wrap"
                                VerticalScrollBarVisibility="Auto" />
                        </Grid>
                    </DockPanel>
                </Grid>

            </DockPanel>

            <!--  Prawa Strona  -->
            <DockPanel Grid.Column="1" Margin="0,3,3,3">

                <!--  Przyciski prawej strony  -->
                <Grid
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="9*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <!--  Clear Button  -->
                    <Button
                        Grid.Column="0"
                        Margin="1,1,1,1"
                        Background="#252c3d"
                        Click="ClearButton_Click">
                        <Image
                            Width="20"
                            Height="20"
                            Source="pack://application:,,,/TESTER;component/resources/clear.png"
                            Stretch="Uniform" />
                        <Button.ToolTip>
                            <ToolTip>Wyczyść dane</ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <!--  Generate Button  -->
                    <Button
                        Grid.Column="1"
                        Margin="1,1,1,1"
                        Background="#252c3d"
                        Click="Button_Click"
                        Content="Generuj"
                        Foreground="White"
                        TabIndex="9" />

                    <!--  Copy Button  -->
                    <Button
                        Grid.Column="2"
                        Background="#252c3d"
                        Click="CopyToClipboardButton_Click">
                        <Button.ToolTip>
                            <ToolTip>Kopiuj wynik</ToolTip>
                        </Button.ToolTip>
                        <Image
                            Width="20"
                            Height="20"
                            Source="pack://application:,,,/TESTER;component/resources/copy.png"
                            Stretch="Uniform" />
                    </Button>
                </Grid>
                <!--  Output Textbox  -->
                <Grid Margin="1,1,1,1" VerticalAlignment="Stretch">
                    <TextBox
                        x:Name="output"
                        Background="#252c3d"
                        Foreground="White"
                        GotKeyboardFocus="TextBox_GotFocus"
                        PreviewMouseLeftButtonDown="TextBox_PreviewMouseLeftButtonDown"
                        TextWrapping="Wrap" />
                    <Label
                        Content="Kliknij &quot;Generuj&quot; aby wygenerować podsumowanie testu."
                        Foreground="Gray"
                        IsHitTestVisible="False">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=output, Path=Text.IsEmpty}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                </Grid>

            </DockPanel>
        </Grid>

    </DockPanel>

</Window>
